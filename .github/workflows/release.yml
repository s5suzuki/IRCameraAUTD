on:
  push:
    tags:
    - 'v*'

name: Upload Release Asset

jobs:   
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt
        
  publish_win:
    needs: [release]
    name: Upload Release Asset Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            return 'ir-camera-autd-'+context.payload.ref.replace(/refs\/tags\//, '')+'-win';
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.x
      - name: Build project x64
        run: |
          dotnet publish -c:Release /p:Platform=x64 -r win-x64 /p:PublishSingleFile=true --self-contained false
          mkdir publish
          copy PI450Viewer\bin\x64\Release\netcoreapp3.1\win-x64\publish/PI450Viewer.exe publish
          Compress-Archive -Path publish/AUTD3Controller.exe, PI450Viewer/Formats.def, PI450Viewer/generic.xml, LICENSE, NOTICE  -DestinationPath assets_x64.zip
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          $value=cat release_url/release_url.txt
          echo "::set-output name=upload_url::$value"
      - name: Upload Release Asset
        id: upload-release-asset-win64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./assets_x64.zip
          asset_name: ${{ steps.get_version.outputs.result }}-x64.zip
          asset_content_type: application/zip
   